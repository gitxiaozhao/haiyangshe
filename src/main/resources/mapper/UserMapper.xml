<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rainier.mapper.UserMapper" >
    <update id="updateUser" >
        update pcuser set sex = #{pcuser.sex} where id = #{pcuser.id}
    </update>
    <update id="updateUserPortrait" >
        update pcuser set portrait = #{pcuser.portrait} where id = #{pcuser.id}
    </update>

    <select id="getUserPortrait" resultType="map">
        select portrait as url from pcuser
    </select>

    <select id="getProblemByUserIdCount" resultType="java.lang.Integer">
        select count(*) from problem where user_id = #{userId} and problem_state = #{type} 


    </select>

    <select id="getProblemByUserId0" resultType="map">
        select id,problem,preserve_time as preserveTime from problem where user_id = #{userId}
        and problem_state = 0
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getProblemByUserId1" resultType="map">
        select id,problem,submit_time as submitTime from problem where user_id = #{userId}
        and problem_state = 1
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getProblemByUserId2" resultType="map">
        select id,problem,examine_time as examineTime from problem where user_id = #{userId}
        and problem_state = 2
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getProblemByUserId3" resultType="map">
        select id,problem,answer_time as answerTime from problem where user_id = #{userId}
        and problem_state = 3
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getProblemByUserId4" resultType="map">
        select id,problem,submit_time as submitTime,examine_time as examineTime,fail_reason as failReason from problem where user_id = #{userId}
        and problem_state = 4
        limit #{pageStart},#{pageSize}
    </select>
    
    
    <select id="getReplyByUserIdCount" resultType="java.lang.Integer">
        select count(*) from reply where user_id = #{userId} and reply_state = #{type}
    </select>
    <select id="getReplyByUserId0" resultType="map">
        SELECT
            t1.id,
            t2.problem,
            t1.text,
            t1.submit_time
        FROM
            reply t1,
            problem t2
        WHERE
            t1.problem_id = t2.id
            AND t1.user_id = #{userId}
            AND t1.reply_state = 0
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getReplyByUserId1" resultType="map">
        SELECT
            t1.id,
            t2.problem,
            t1.text,
            t1.examine_time
        FROM
            reply t1,
            problem t2
        WHERE
            t1.problem_id = t2.id
            AND t1.user_id = #{userId}
            AND t1.reply_state = 1
        limit #{pageStart},#{pageSize}
    </select>
    <select id="getReplyByUserId2" resultType="map">
        SELECT
            t1.id,
            t2.problem,
            t1.text,
            t1.examine_time,
            t1.fail_reason
        FROM
            reply t1,
            problem t2
        WHERE
            t1.problem_id = t2.id
            AND t1.user_id = #{userId}
            AND t1.reply_state = 2
        limit #{pageStart},#{pageSize}
    </select>

    <delete id="deleteReplyByIds" >
        delete from reply
        <where>
            id in
            <foreach collection="ids"  index="index" item="item" open="(" separator="," close=")"  >
                #{item}
            </foreach>
        </where>
    </delete>

    <select id="getReplyByAdoptCount" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            reply t1,
            problem t2
        WHERE
            t1.problem_id = t2.id
            AND t1.user_id = #{userId}
            AND t1.adopt = 1
    </select>
    <select id="getReplyByAdopt" resultType="map">
        SELECT
            t1.id,
            t2.problem,
            t1.text,
            t1.adopt_time
        FROM
            reply t1,
            problem t2
        WHERE
            t1.problem_id = t2.id
            AND t1.user_id = #{userId}
            AND t1.adopt = 1
        limit #{pageStart},#{pageSize}
    </select>

</mapper>